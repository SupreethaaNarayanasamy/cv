import tensorflow as tf
import cv2
import numpy as np
from skimage.feature import hog
from skimage import color
import matplotlib.pyplot as plt

# 1️⃣ Load a sample dataset (CIFAR-10 for example)
(train_images, _), (_, _) = tf.keras.datasets.cifar10.load_data()

# Take one image and resize to 64x128
img = train_images[0]  # you can pick any index
img_resized = cv2.resize(img, (64, 128))

# Convert to grayscale
gray = color.rgb2gray(img_resized)

# 2️⃣ Calculate gradients
gx = cv2.Sobel(gray, cv2.CV_32F, 1, 0, ksize=1)
gy = cv2.Sobel(gray, cv2.CV_32F, 0, 1, ksize=1)

# 3️⃣ Magnitude and Orientation
magnitude, angle = cv2.cartToPolar(gx, gy, angleInDegrees=True)

# 4️⃣ Histogram of Gradients (8×8 cells) and 5️⃣ Normalization (16×16 blocks)
hog_features, hog_image = hog(
    gray,
    orientations=9,
    pixels_per_cell=(8, 8),
    cells_per_block=(2, 2),
    block_norm='L2-Hys',
    visualize=True,
    transform_sqrt=True
)

# 6️⃣ Display and show features
plt.figure(figsize=(10,5))
plt.subplot(1,2,1)
plt.title('Original Image')
plt.imshow(gray, cmap='gray')

plt.subplot(1,2,2)
plt.title('HOG Features Visualization')
plt.imshow(hog_image, cmap='gray')
plt.show()

print("Feature vector length:", len(hog_features))

import tensorflow_datasets as tfds
import numpy as np
import matplotlib.pyplot as plt

# 1️⃣ Load MNIST dataset (grayscale)
dataset, info = tfds.load('mnist', split='train', with_info=True)

# Take one image
for example in dataset.take(1):
    image = example['image'].numpy().squeeze()  # shape (28,28)
    break

# 2️⃣ Region-Growing Function
def region_growing(img, seed, threshold=10):
    """
    img: 2D grayscale image
    seed: tuple (x,y) starting point
    threshold: intensity difference
    """
    h, w = img.shape
    segmented = np.zeros_like(img)
    visited = np.zeros_like(img, dtype=bool)
    seed_value = img[seed]
    
    stack = [seed]
    
    while stack:
        x, y = stack.pop()
        if visited[x, y]:
            continue
        visited[x, y] = True
        if abs(int(img[x, y]) - int(seed_value)) <= threshold:
            segmented[x, y] = 255  # mark as part of region
            # check 4-neighbors
            for dx, dy in [(-1,0),(1,0),(0,-1),(0,1)]:
                nx, ny = x+dx, y+dy
                if 0 <= nx < h and 0 <= ny < w:
                    stack.append((nx, ny))
    return segmented

# 3️⃣ Choose a seed (pick somewhere in the digit)
seed_point = (14,14)

# 4️⃣ Apply region-growing
segmented_img = region_growing(image, seed_point, threshold=10)

# 5️⃣ Plot original vs segmented
plt.figure(figsize=(8,4))
plt.subplot(1,2,1)
plt.imshow(image, cmap='gray')
plt.title("Original Image")
plt.axis('off')

plt.subplot(1,2,2)
plt.imshow(segmented_img, cmap='gray')
plt.title("Region-Growing Segmentation")
plt.axis('off')
plt.show()
